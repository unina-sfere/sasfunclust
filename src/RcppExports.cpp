// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// get_sigma
arma::mat get_sigma(arma::mat x, arma::vec curve, arma::vec time, arma::mat S, arma::mat piigivej, arma::mat gcov, arma::vec n_i, arma::cube gamma, arma::mat mu);
RcppExport SEXP _sasfunclust_get_sigma(SEXP xSEXP, SEXP curveSEXP, SEXP timeSEXP, SEXP SSEXP, SEXP piigivejSEXP, SEXP gcovSEXP, SEXP n_iSEXP, SEXP gammaSEXP, SEXP muSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type curve(curveSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type time(timeSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type S(SSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type piigivej(piigivejSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type gcov(gcovSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type n_i(n_iSEXP);
    Rcpp::traits::input_parameter< arma::cube >::type gamma(gammaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mu(muSEXP);
    rcpp_result_gen = Rcpp::wrap(get_sigma(x, curve, time, S, piigivej, gcov, n_i, gamma, mu));
    return rcpp_result_gen;
END_RCPP
}
// get_numden
List get_numden(arma::mat x, arma::vec curve, arma::vec time, arma::mat S, arma::mat piigivej, arma::mat gcov, arma::vec n_i, arma::cube gamma);
RcppExport SEXP _sasfunclust_get_numden(SEXP xSEXP, SEXP curveSEXP, SEXP timeSEXP, SEXP SSEXP, SEXP piigivejSEXP, SEXP gcovSEXP, SEXP n_iSEXP, SEXP gammaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type curve(curveSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type time(timeSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type S(SSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type piigivej(piigivejSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type gcov(gcovSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type n_i(n_iSEXP);
    Rcpp::traits::input_parameter< arma::cube >::type gamma(gammaSEXP);
    rcpp_result_gen = Rcpp::wrap(get_numden(x, curve, time, S, piigivej, gcov, n_i, gamma));
    return rcpp_result_gen;
END_RCPP
}
// get_Estep
List get_Estep(List par, List data, List vars, arma::mat S, bool hard, arma::vec n_i);
RcppExport SEXP _sasfunclust_get_Estep(SEXP parSEXP, SEXP dataSEXP, SEXP varsSEXP, SEXP SSEXP, SEXP hardSEXP, SEXP n_iSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type par(parSEXP);
    Rcpp::traits::input_parameter< List >::type data(dataSEXP);
    Rcpp::traits::input_parameter< List >::type vars(varsSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type S(SSEXP);
    Rcpp::traits::input_parameter< bool >::type hard(hardSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type n_i(n_iSEXP);
    rcpp_result_gen = Rcpp::wrap(get_Estep(par, data, vars, S, hard, n_i));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_sasfunclust_get_sigma", (DL_FUNC) &_sasfunclust_get_sigma, 9},
    {"_sasfunclust_get_numden", (DL_FUNC) &_sasfunclust_get_numden, 8},
    {"_sasfunclust_get_Estep", (DL_FUNC) &_sasfunclust_get_Estep, 6},
    {NULL, NULL, 0}
};

RcppExport void R_init_sasfunclust(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
